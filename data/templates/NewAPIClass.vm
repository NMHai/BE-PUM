/**
 * Project: BE-PUMv2
 * Package name: v2.org.analysis.apihandle.winapi.$func.libName#**#.functions
 * File name: $func.funcName#**#.java
 * Created date: $date
 */

package v2.org.analysis.apihandle.winapi.$func.libName#**#.functions;

## Import some required classes
#foreach( $classPath in $func.importList )
import $classPath;
#end

/**
 * $func.description
 * 
#foreach( $param in $func.paramsList )
 * @param $param.name
 *            $param.desc
 *
#end
#if( $func.ret )
 * @return $func.ret.desc
 *
#end
 * @author Yen Nguyen
 *
 */
 
public class $func.funcName extends $func.extendClass {

	public $func.funcName () {
		super();
		NUM_OF_PARMS = $func.paramsList.size();
	}

	@Override
	public void execute() {
	
######### Get all values of parameters #########
#if ($func.paramsList.size() > 0)
#foreach( $param in $func.paramsList )
#set( $index = $param.order - 1 )
		long t$param.order = this.params.get($index);
#end
#end

#if ($func.paramsList.size() > 0)
#foreach( $param in $func.paramsList )
		$param.type $param.name = $param.initStr
#end
#end

############## CALL JNA ##############
		$func.ret.type ret = Advapi32DLL.INSTANCE.$func.funcName (#if ($func.paramsList.size() > 0)
#foreach( $param in $func.paramsList )
#if ( $param.order == $func.paramsList.size() )$param.name#else$param.name, #end
#end
#end);

		register.mov("eax", new LongValue(ret.longValue()));
	}

}